app:
  application-namespace: ${APPLICATION_NAMESPACE:letsmeet}
  meeting-table-name: ${MEETING_TABLE_NAME:meetings}
  iam-table-name: ${IAM_TABLE_NAME:meetings}
  aws:
    region: ${AWS_REGION:us-east-1}
    s3:
      bucket: ${MEETINGS_BUCKET_NAME:meetings}
  jws:
    access-token-expiry: ${JWS_ACCESS_TOKEN_EXPIRY:86400}
    refresh-token-expiry: ${JWS_REFRESH_TOKEN_EXPIRY:172800}
    public-signing-key-path: ${JWS_PUBLIC_SIGNING_KEY_PATH:/letsmeet/iam/keys/public}
    private-signing-key-path: ${JWS_PRIVATE_SIGNING_KEY_PATH:/letsmeet/iam/keys/private}
  oidc:
    token: https://www.googleapis.com/oauth2/v4/token
    authorization: https://accounts.google.com/o/oauth2/v2/auth
    user-info: https://www.googleapis.com/oauth2/v3/userinfo
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    grant-type: authorization_code
    scope: openid profile email
    redirect-uri: ${OIDC_REDIRECT_URL:http://localhost:8080/auth/google/callback}
  trello:
    api-key: ${TRELLO_API_KEY:none}

quarkus:
  log:
    category:
      "com.yourkoder":
        level: DEBUG
        min-level: DEBUG
  #  config:
  #    mapping:
  #      validate-unknown: false
  devservices:
    enabled: false
  camel:
    routes-discovery:
      enabled: false
  native:
    additional-build-args: -H:ConfigurationResourceRoots=native-image-config/, --initialize-at-run-time=org.springframework.core.io.VfsUtils
  #    if we want to use Math.random() for native builds we must initialize its seed at run time
  #    additional-build-args: --initialize-at-run-time=java.lang.Math$RandomNumberGeneratorHolder

  container-image:
    build: false
    group: quarkus

  http:
    cors:
      ~: true
      origins: ${QUARKUS_HTTP_CORS_ORIGINS:http://localhost:8080,http://localhost:8082,http://localhost:8083}
      methods: ${QUARKUS_HTTP_CORS_METHODS:GET,POST,PUT,PATCH,DELETE,OPTIONS}
      headers: ${QUARKUS_HTTP_CORS_HEADERS:Accept,Accept-Charset,Accept-Datetime,Accept-Encoding,Accept-Language,Authorization,Cache-Control,Connection,Content-Length,Content-Type,Cookie,Date,DNT,Expect,Host,Keep-Alive,Origin,Pragma,Range,Referer,Transfer-Encoding,Upgrade,User-Agent,Via,X-Amz-Date,X-Api-Key,X-Amz-Security-Token}
      access-control-allow-credentials: ${QUARKUS_HTTP_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS:false}
      access-control-max-age: ${QUARKUS_HTTP_CORS_ACCESS_CONTROL_MAX_AGE:86400}
      exposed-headers: ${QUARKUS_HTTP_CORS_EXPOSED_HEADERS}
    access-log:
      enabled: true
    enable-compression: true
    limits:
      max-body-size: 10M

  jackson:
    fail-on-unknown-properties: false
    timezone: Asia/Kolkata
  smallrye-openapi:
    open-api-version: 3.0.3
    auto-add-security: false
    path: /openapi/yaml
    store-schema-directory: target/generated
  ssl:
    native: true
  swagger-ui:
    path: /openapi
    theme: outline
  resteasy:
    gzip:
      enabled: true
      max-input: 256K

mp:
  openapi:
    extensions:
      smallrye:
        info:
          title: Lets Meet HTTP APIs
          description: The awesome HTTP APIs for Let's Meet backend!